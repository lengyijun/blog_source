此题颇为麻烦，首先得到A(n),B(n)的递推关系，然后得到通项公式，然后化简gcd，最后modulous power计算


##蓝色
下一层的蓝色=（上一层的蓝色-上一层一条边下的蓝色）*6


##黄色
麻烦一点。可以分为内层的六边形内的个数+6*每个角中的个数
下一层的6边形内的个数=6* 上一层一条边下的蓝色
下一层的6边形外的个数=6*（ 上一层的黄色总个数-上一层一条边下的黄色）



得到递推公式
12*A(n+1)+A(n+3)=7*A(n+2)
B(n+2)-7*B(n+1)+12*B(n)=3*4^(n+2)-2*3^(n+2)
A(n)比较好求
B(n)我是问了沙神才会的

 

 
 化简一下，即
$ gcd (8*4^n-3*3^n,2*n*4^n+6*3*n+n*3^n ) $
我是将n mod 4 分类讨论，不过在thread上面看到也可以同一起来。
做到这一步我用c++写，但是大量的模运算还是很慢，知道我发现python的pow可以接受第三个参数，而且速度很快，才做出这道题。
https://en.wikipedia.org/wiki/Exponentiation_by_squaring
